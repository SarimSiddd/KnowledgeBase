


- Zero value initialization of structs is considered useful and should be utilizied without the need for an explicit constructor

- Difference between new and make:


-> New returns a zeroed not initialized value

-> make returns an initialized value (slices, maps and channels only)

- most array programming in Go is done with slices rather than simple arrays.
- Slices hold references to an underlying array, and if you assign one slice to another, both refer to the same array. If a function takes a slice argument, changes it makes to the elements of the slice will be visible to the caller, analogous to passing a pointer to the underlying array. A Read function can therefore accept a slice argument rather than a pointer and a count; the length within the slice sets an upper limit of how much data to read

- append creates a copy of the runtime datastructure, thats why append returns by value instead of just relying on modifying the contents of the slice 

- init() is a special function, that is called automatically to set/validate the state of a go source file

