
Request/Response usage:

1) Web, HTTP, DNS, SSH
2) RPC
3) SQL and Database Protocols
4) APIs (REST/SOAP/GraphQL)




1. Parsing xml is more expensive than parsing json, that's why people moved to json
2. Parsing json was also slow, that's why people moved to protocol buffers
3. RPC was popular because client wanted abstraction (they didn't care if the method was local or remote). Client doesn't know that method was local or not, so if a method is slow, the client doesnt know if its a local method or a remote method

GraphQL handles multiple "requests" as one and avoids the overhead for sending a new request for everything. It can also optimize (like forego sql query exection) based on the query context

