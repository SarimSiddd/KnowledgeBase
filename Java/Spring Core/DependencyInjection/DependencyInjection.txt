Coding without depedency injection:

Objects take responsibility for managing their own dependencies

Generally leads to more tightly coupled code

Can require coding changes to manage changes with dependencies

Can make classes more difficult to unit test

- This means you see code with the new keyword - objects being initialized and all of that


Guru notes:

DI can be done with Concrete Class or with interface

Inversion of Control:

Is a technique to allow dependencies to be injected on runtime

Dependencies are not predetermined


Best practices:

favour using constructor injection over setter injection

use final properties for injected components

Whenever practical code to an interface


@Service, @Controller, @Component - are just syntatic sugar (all the same to spring)

but the interface to be injected needs to be annotated with one of these tags