Lecture Summary: In this lecture, we studied the possible executions of a Computation Graph (CG) on an idealized parallel machine with P processors. It is idealized because all processors are assumed to be identical, and the execution time of a node is assumed to be fixed, regardless of which processor it executes on. A legalschedule is one that obeys the dependence constraints in the CG, such that for every directed edge (A, B), the schedule guarantees that step B is only scheduled after step A completes.  Unless otherwise specified, we will restrict our attention in this course to schedules that have no unforced idleness, i.e., schedules in which a processor is not permitted to be idle if a CG node is available to be scheduled on it.  Such schedules are also referred to as "greedy" schedules.

We defined T_{P} 
P
​
 as the execution time of a CG on P processors, and observed that

T_∞ 
∞
​
 ≤ T_P 
P
​
 ≤ T_1 
1
​
 

We  also  saw examples for which there could be different values of T_P 
P
​
 for different   schedules of the same CG on Pprocessors.

We then defined the parallel speedup for a given schedule of a CG on P processors as Speedup(P) = T_1 
1
​
 /T_P 
P
​
 , and observed that Speedup(P) must be ≤ the number of processors P , and also ≤ the ideal parallelism, WORK/SPAN.


https://www.coursera.org/learn/parallel-programming-in-java/supplement/qHhbn/1-4-lecture-summary